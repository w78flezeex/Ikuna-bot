const { SlashCommandBuilder } = require('@discordjs/builders');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('greroll')
    .setDescription('–ü–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è')
    .addStringOption(option => 
      option
        .setName('messageid')
        .setDescription('ID —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞')
        .setRequired(true)
    ),

  async execute(interaction) {
    const client = interaction.client; // –ü–æ–ª—É—á–∞–µ–º client –∏–∑ interaction
    const messageID = interaction.options.getString('messageid');

    try {
      await client.giveawaysManager.reroll(messageID, {
        messages: {
          congrat: 'üéâ –ù–æ–≤—ã–π(–µ) –ø–æ–±–µ–¥–∏—Ç–µ–ª—å(–∏): {winners}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ **{this.prize}**!',
          error: '–ö —Ä–æ–∑—ã–≥—Ä—ã—à—É –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è!'
        }
      });
      await interaction.reply({ content: '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤—ã–±—Ä–∞–Ω.', ephemeral: true });
    } catch (err) {
      console.error(err);
      await interaction.reply({ content: `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID.\n\`${err}\``, ephemeral: true });
    }
  }
};
