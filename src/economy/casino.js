const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('casino')
    .setDescription('–í—ã–±–µ–π 777 –∏ —É–¥–≤–æ–π —Å–≤–æ—é —Å—Ç–∞–≤–∫—É!')
    .addIntegerOption(option =>
      option.setName('—Å—Ç–∞–≤–∫–∞')
        .setDescription('–°—É–º–º–∞ –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏ (–º–∏–Ω–∏–º—É–º 100)')
        .setRequired(true)),
  async execute(interaction) {
    const bet = interaction.options.getInteger('—Å—Ç–∞–≤–∫–∞');

    if (isNaN(bet) || bet < 100) {
      return interaction.reply('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ 100 –º–æ–Ω–µ—Ç.');
    }

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const userMoney = await money.findOne({ userID: interaction.user.id });
      const currencySymbolData = await economy_settings.findOne({ guildID: interaction.guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      if (!userMoney || userMoney.handBalance < bet) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏.');
      }

      // –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã –≤ —Ä—É–ª–µ—Ç–∫—É
      const result = Math.random() <= 0.25; // 25% —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞

      let winnings = 0;

      if (result) {
        winnings = bet * 2; // –ï—Å–ª–∏ –≤—ã–∏–≥—Ä—ã—à, —É–¥–≤–∞–∏–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
      } else {
        winnings = -bet; // –ï—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã—à, —Ç–µ—Ä—è–µ–º —Å—Ç–∞–≤–∫—É
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await money.updateOne({ userID: interaction.user.id }, { $inc: { handBalance: winnings } });

      const newBalance = userMoney.handBalance + winnings;

      const embed = new EmbedBuilder()
        .setTitle('–†—É–ª–µ—Ç–∫–∞')
        .setDescription(`–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ ${bet} ${currencySymbol}`)
        .addFields(
          { name: '–†–µ–∑—É–ª—å—Ç–∞—Ç', value: result ? '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!' : '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.' },
          { name: '–í—ã–∏–≥—Ä—ã—à / –ü—Ä–æ–∏–≥—Ä—ã—à', value: winnings > 0 ? `–í—ã–∏–≥—Ä—ã—à: ${winnings} ${currencySymbol}` : `–ü—Ä–æ–∏–≥—Ä—ã—à: ${-winnings} ${currencySymbol}` },
          { name: '–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å', value: `${newBalance} ${currencySymbol}` }
        )
        .setColor(result ? '#00FF00' : '#FF0000');

      interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã —Ä—É–ª–µ—Ç–∫–∏:', error);
      interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã —Ä—É–ª–µ—Ç–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.');
    }
  },
};
