const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å Money –∏–∑ —Ñ–∞–π–ª–∞ models.js
const { embedcolor } = require('../../config.json');

const cooldowns = new Map();

module.exports = {
  data: new SlashCommandBuilder()
    .setName('rob')
    .setDescription('–ü–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ–≥—Ä–∞–±–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ —É–∫—Ä–∞—Å—Ç—å –¥–µ–Ω—å–≥–∏')
    .addUserOption((option) =>
      option.setName('target').setDescription('–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è').setRequired(true)
    ),
  async execute(interaction) {
    const userId = interaction.user.id;
    const targetUser = interaction.options.getMember('target');
    const guildId = interaction.guildId;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ü–µ–ª—å - —ç—Ç–æ –±–æ—Ç –∏–ª–∏ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (targetUser.user.bot || targetUser.id === userId) {
      return interaction.reply('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–≥—Ä–∞–±–∏—Ç—å —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.');
    }

    try {
      const userBalanceData = await getOrCreateMoneyEntry(userId, guildId);
      const targetBalanceData = await getOrCreateMoneyEntry(targetUser.id, guildId);
      const currencySymbolData = await economy_settings.findOne({ guildID: guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      const userHandBalance = userBalanceData.handBalance || 0;
      const targetHandBalance = targetBalanceData.handBalance || 0;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
      if (userHandBalance <= 0) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è.');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∂–µ—Ä—Ç–≤—ã –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö
      if (targetHandBalance < 1) {
        return interaction.reply('–£ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è.');
      }

      const now = Date.now();
      const cooldownKey = `${guildId}-${userId}`;
      const cooldownTime = cooldowns.get(cooldownKey) || 0;

      if (now < cooldownTime) {
        const remainingCooldown = cooldownTime - now;
        const minutes = Math.floor(remainingCooldown / 60000);
        const seconds = Math.floor((remainingCooldown % 60000) / 1000);
        const remainingTimeMessage = `${minutes} –º–∏–Ω—É—Ç ${seconds} —Å–µ–∫—É–Ω–¥`;
        await interaction.reply(`–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${remainingTimeMessage}.`);
        return;
      }

      cooldowns.set(cooldownKey, now + 600000); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç (600 000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥)

      // –í—ã—á–∏—Å–ª—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è (—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 1)
      const robberySuccess = Math.random() < 0.5; // 50% —à–∞–Ω—Å —É—Å–ø–µ—Ö–∞

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üè¥ **–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ**')
        .setDescription(`–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –æ–≥—Ä–∞–±–∏—Ç—å ${targetUser.displayName}.`)
        .setThumbnail(interaction.user.displayAvatarURL({ format: 'png' }));

      if (robberySuccess) {
        // –£—Å–ø–µ—à–Ω–æ–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ
        const stolenAmount = Math.floor(targetHandBalance * 0.25); // –£–∫—Ä–∞–¥–µ–º 25% –æ—Ç —Ä—É–∫–∏ —Ü–µ–ª–∏
        userBalanceData.handBalance += stolenAmount;
        targetBalanceData.handBalance -= stolenAmount;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–∞—Ö
        await userBalanceData.save();
        await targetBalanceData.save();

        embed.addFields([{ name: '–£—Å–ø–µ—Ö!', value: `–í—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ ${targetUser.displayName} –∏ —É–∫—Ä–∞–ª–∏ ${stolenAmount} ${currencySymbol}.` }]);
      } else {
        // –ù–µ—É—Å–ø–µ—à–Ω–æ–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ
        embed.addFields([{ name: '–ü—Ä–æ–≤–∞–ª', value: `–ü–æ–ø—ã—Ç–∫–∞ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è ${targetUser.displayName} –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å, –∏ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫—Ä–∞–ª–∏.` }]);
        
        // –®–∞–Ω—Å —Å–Ω—è—Ç–∏—è –¥–µ–Ω–µ–≥ —Å —Ä—É–∫ –≥—Ä–∞–±–∏—Ç–µ–ª—è –≤ —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
        const lostAmount = Math.floor(Math.random() * 101); // –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100
        if (userHandBalance >= lostAmount) {
          // –°–Ω–∏–º–∞–µ–º –¥–µ–Ω—å–≥–∏ —Å —Ä—É–∫
          userBalanceData.handBalance -= lostAmount;
        } else {
          // –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Å–Ω–∏–º–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫ —Å –±–∞–Ω–∫–∞
          userBalanceData.bankBalance -= (lostAmount - userHandBalance);
          userBalanceData.handBalance = 0;
        }
        await userBalanceData.save();
        embed.addFields([{ name: '–ù–µ—É–¥–∞—á–∞', value: `–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${lostAmount} ${currencySymbol}.` }]);
      }

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º timestamp —Å —Ü–≤–µ—Ç–æ–º #FFFAFA
      embed.setTimestamp();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è:', error.message);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è.');
    }
  },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–µ—Ä–≤–µ—Ä–∞
async function getOrCreateMoneyEntry(userId, guildId) {
  try {
    let userBalanceData = await money.findOne({ userID: userId, guildID: guildId });

    if (!userBalanceData) {
      userBalanceData = await money.create({
        userID: userId,
        guildID: guildId,
        handBalance: 0,
        bankBalance: 0
      });
    }

    return userBalanceData;
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    throw new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
  }
}
