const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å Money –∏–∑ —Ñ–∞–π–ª–∞ models.js
const { embedcolor } = require('../../config.json')

module.exports = {
  data: new SlashCommandBuilder()
    .setName('deposit')
    .setDescription('–ü–æ–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –±–∞–Ω–∫')
    .addIntegerOption(option =>
      option.setName('—Å—É–º–º–∞')
        .setDescription('–°—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –±–∞–Ω–∫')
        .setRequired(true)),
  async execute(interaction) {
    const userId = interaction.user.id;
    const guildId = interaction.guildId;

    const depositAmount = interaction.options.getInteger('—Å—É–º–º–∞');

    if (depositAmount <= 0) {
      return interaction.reply('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.');
    }

    try {
      let userMoney = await money.findOne({ userID: userId, guildID: guildId }); // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –¥–µ–Ω—å–≥–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (!userMoney) {
        userMoney = await money.create({ userID: userId, guildID: guildId }); // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
      }

      if (userMoney.handBalance < depositAmount) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.');
      }

      userMoney.handBalance -= depositAmount;
      userMoney.bankBalance += depositAmount;

      await userMoney.save(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–µ–Ω—å–≥–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      const currencySymbolData = await economy_settings.findOne({ guildID: interaction.guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üí∞ **–î–µ–ø–æ–∑–∏—Ç**')
        .setDescription(`–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ ${depositAmount} ${currencySymbol} –≤ –±–∞–Ω–∫.`)
        .addFields(
          { name: '–ù–∞ —Ä—É–∫–∞—Ö:', value: `${userMoney.handBalance >= 0 ? userMoney.handBalance : 0} ${currencySymbol}` },
          { name: '–í –±–∞–Ω–∫–µ:', value: `${userMoney.bankBalance} ${currencySymbol}` }
        )
        .setThumbnail(interaction.user.displayAvatarURL({ format: 'png' }))
        .setFooter({ text: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å.', iconURL: interaction.user.displayAvatarURL({ format: 'png' }) })
        .setTimestamp();

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–∞:', error);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–ø–æ–∑–∏—Ç–∞.');
    }
  },
};
