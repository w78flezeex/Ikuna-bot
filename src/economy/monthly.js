const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB');
const { embedcolor } = require('../../config.json')

const cooldowns = new Map();

module.exports = {
  data: new SlashCommandBuilder()
    .setName('monthly')
    .setDescription('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–æ–Ω—É—Å'),
  async execute(interaction) {
    const userId = interaction.user.id;
    const guildId = interaction.guildId;

    try {
      let userMoney = await money.findOne({ userID: userId, guildID: guildId });
      if (!userMoney) {
        userMoney = await money.create({ userID: userId, guildID: guildId });
      }

      const economySettings = await economy_settings.findOne({ guildID: guildId }) || { minMonthly: 500, maxMonthly: 1000 }; // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
      const currencySymbolData = await economy_settings.findOne({ guildID: interaction.guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      const now = Date.now();
      const cooldownKey = `${guildId}-${userId}`;
      const cooldownTime = cooldowns.get(cooldownKey) || 0;

      if (now < cooldownTime) {
        const remainingCooldown = cooldownTime - now;
        const days = Math.floor(remainingCooldown / 86400000);
        const hours = Math.floor((remainingCooldown % 86400000) / 3600000);
        const minutes = Math.floor((remainingCooldown % 3600000) / 60000);
        const seconds = Math.floor((remainingCooldown % 60000) / 1000);
        const remainingTimeMessage = `${days} –¥–Ω–µ–π ${hours} —á–∞—Å–æ–≤ ${minutes} –º–∏–Ω—É—Ç ${seconds} —Å–µ–∫—É–Ω–¥`;
        await interaction.reply(`–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–æ–Ω—É—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ ${remainingTimeMessage}.`);
        return;
      }

      const minMonthly = economySettings.minMonthly || 0; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —ç–∫–æ–Ω–æ–º–∏–∫–∏
      const maxMonthly = economySettings.maxMonthly || 100; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —ç–∫–æ–Ω–æ–º–∏–∫–∏
      const monthly = Math.floor(Math.random() * (maxMonthly - minMonthly + 1)) + minMonthly; // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç minEarnings –¥–æ maxEarnings
      userMoney.handBalance += monthly;
      await userMoney.save();

      cooldowns.set(cooldownKey, now + 2592000000); // 30 –¥–Ω–µ–π –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üéÅ **–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–æ–Ω—É—Å**')
        .setDescription(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ ${monthly} ${currencySymbol}`)
        .addFields([{ name: '–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:', value: `${userMoney.handBalance} ${currencySymbol}` }])
        .setThumbnail(interaction.user.displayAvatarURL({ format: 'png' }))
        .setFooter({ text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!', iconURL: interaction.user.displayAvatarURL({ format: 'png' }) })
        .setTimestamp();

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞:', error);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞.');
    }
  },
};
