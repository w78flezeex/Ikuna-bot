const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB');
const { embedcolor } = require('../../config.json');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('withdraw')
    .setDescription('–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±–∞–Ω–∫–∞')
    .addIntegerOption(option =>
      option.setName('—Å—É–º–º–∞')
        .setDescription('–°—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å —Å –±–∞–Ω–∫–∞')
        .setRequired(true)),
  async execute(interaction) {
    const userId = interaction.user.id;
    const guildId = interaction.guildId;

    const withdrawAmount = interaction.options.getInteger('—Å—É–º–º–∞');

    if (withdrawAmount <= 0) {
      return interaction.reply('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.');
    }

    try {
      let userMoney = await money.findOne({ userID: userId, guildID: guildId });
      if (!userMoney) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ.');
      }

      if (userMoney.bankBalance < withdrawAmount) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.');
      }

      userMoney.handBalance += withdrawAmount;
      userMoney.bankBalance -= withdrawAmount;

      await userMoney.save();

      const currencySymbolData = await economy_settings.findOne({ guildID: interaction.guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üí∞ **–°–Ω—è—Ç–∏–µ**')
        .setDescription(`–í—ã —Å–Ω—è–ª–∏ ${withdrawAmount} ${currencySymbol} —Å –±–∞–Ω–∫–∞.`)
        .addFields(
          { name: '–ù–∞ —Ä—É–∫–∞—Ö:', value: `${userMoney.handBalance >= 0 ? userMoney.handBalance : 0} ${currencySymbol}` },
          { name: '–í –±–∞–Ω–∫–µ:', value: `${userMoney.bankBalance} ${currencySymbol}` }
        )
        .setThumbnail(interaction.user.displayAvatarURL({ format: 'png' }))
        .setFooter({ text: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å.', iconURL: interaction.user.displayAvatarURL({ format: 'png' }) })
        .setTimestamp();

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–Ω—è—Ç–∏—è:', error);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–Ω—è—Ç–∏—è.');
    }
  },
};
