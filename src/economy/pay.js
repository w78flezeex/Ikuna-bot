const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å Money –∏–∑ —Ñ–∞–π–ª–∞ models.js
const { embedcolor } = require('../../config.json');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('pay')
    .setDescription('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –¥—Ä—É–≥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É')
    .addUserOption(option =>
      option.setName('–ø–æ–ª—É—á–∞—Ç–µ–ª—å')
        .setDescription('–£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏')
        .setRequired(true))
    .addIntegerOption(option =>
      option.setName('—Å—É–º–º–∞')
        .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å')
        .setRequired(true)),
  async execute(interaction) {
    const senderId = interaction.user.id;
    const receiverId = interaction.options.getUser('–ø–æ–ª—É—á–∞—Ç–µ–ª—å').id;
    const amount = interaction.options.getInteger('—Å—É–º–º–∞');
    const guildId = interaction.guildId;

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ (–∏–ª–∏) –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await createOrUpdateMoneyEntry(senderId, guildId);
    await createOrUpdateMoneyEntry(receiverId, guildId);

    try {
      const senderData = await money.findOne({ userID: senderId, guildID: guildId }); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const receiverData = await money.findOne({ userID: receiverId, guildID: guildId }); // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const currencySymbolData = await economy_settings.findOne({ guildID: guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ
      if (senderId === receiverId) {
        return interaction.reply('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ.');
      }

      if (amount <= 0 || senderData.handBalance < amount) {
        console.log('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.');
        return interaction.reply('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.');
      }

      // –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      senderData.handBalance -= amount;
      receiverData.handBalance += amount;

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await senderData.save();
      await receiverData.save();

      const senderName = interaction.member.displayName;
      const receiverName = interaction.options.getMember('–ø–æ–ª—É—á–∞—Ç–µ–ª—å').displayName;
      
      // –°–æ–∑–¥–∞–µ–º embed —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      const senderEmbed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üí∏ **–ü–µ—Ä–µ–≤–æ–¥**')
        .setDescription(`–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ ${receiverName} ${amount} ${currencySymbol}`)
        .setFooter({ text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É —â–µ–¥—Ä–æ—Å—Ç—å!' })
        .setTimestamp();
      
      // –°–æ–∑–¥–∞–µ–º embed —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      const receiverEmbed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üí∏ **–ö–æ—à–µ–ª—ë–∫**')
        .setDescription(`${senderName} –ø–µ—Ä–µ–≤—ë–ª –≤–∞–º ${amount} ${currencySymbol}`)
        .setTimestamp();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
      await interaction.reply({ embeds: [senderEmbed] });
      await interaction.options.getUser('–ø–æ–ª—É—á–∞—Ç–µ–ª—å').send({ embeds: [receiverEmbed] });

    } catch (error) {
      console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã pay:', error.message);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.');
    }
  },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–µ—Ä–≤–µ—Ä–∞
async function createOrUpdateMoneyEntry(userId, guildId) {
  try {
    const existingEntry = await money.findOne({ userID: userId, guildID: guildId });

    if (!existingEntry) {
      await money.create({
        userID: userId,
        guildID: guildId,
        handBalance: 0,
        bankBalance: 0
      });
    }
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
  }
}
