const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField } = require('discord.js');
const { money, economy_settings } = require('../../mongoDB');
const { embedcolor } = require('../../config.json');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('addbalance')
    .setDescription('–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    .addUserOption(option =>
      option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏')
        .setRequired(true))
    .addIntegerOption(option =>
      option.setName('—Å—É–º–º–∞')
        .setDescription('–°—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å')
        .setRequired(true)),
  async execute(interaction) {
    if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
      return interaction.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    }

    const targetUser = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
    const amount = interaction.options.getInteger('—Å—É–º–º–∞');

    if (amount <= 0) {
      return interaction.reply('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.');
    }

    try {
      let userMoney = await money.findOne({ userID: targetUser.id, guildID: interaction.guildId });

      if (!userMoney) {
        userMoney = new money({
          handBalance: 0,
          bankBalance: 0,
          userID: targetUser.id,
          guildID: interaction.guildId,
          status: '',
          percentage: '',
        });
      }

      userMoney.handBalance += amount;
      await userMoney.save();

      const currencySymbolData = await economy_settings.findOne({ guildID: interaction.guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üí∞ **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞**')
        .setDescription(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} ${currencySymbol} –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${targetUser.username}.`)
        .addFields({ name: '–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', value: `${userMoney.handBalance} ${currencySymbol}` })
        .setThumbnail(targetUser.displayAvatarURL({ format: 'png' }))
        .setFooter({ text: `–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.`, iconURL: interaction.user.displayAvatarURL({ format: 'png' }) })
        .setTimestamp();

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:', error);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞.');
    }
  },
};
