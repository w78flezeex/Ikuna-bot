const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const { purchase, economy_settings } = require('../../mongoDB'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å Purchase –∏–∑ —Ñ–∞–π–ª–∞ models.js
const { embedcolor } = require('../../config.json')

module.exports = {
  data: new SlashCommandBuilder()
    .setName('purchases')
    .setDescription('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ.'),
  async execute(interaction) {
    try {
      const userId = interaction.user.id;
      const guildId = interaction.guildId;

      // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–∫—É–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø–æ –µ–≥–æ ID
      const userPurchases = await purchase.find({ userID: userId, guildID: guildId });
      const currencySymbolData = await economy_settings.findOne({ guildID: guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      if (!userPurchases || userPurchases.length === 0) {
        return interaction.reply('–í—ã –µ—â–µ –Ω–µ —Å–æ–≤–µ—Ä—à–∏–ª–∏ –ø–æ–∫—É–ø–æ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.');
      }

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üõí **–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏**')
        .setDescription('–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:');

      userPurchases.forEach((purchase, index) => {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏
        const purchaseInfo = `–¢–æ–≤–∞—Ä: **${purchase.title}**\n–¶–µ–Ω–∞: ${purchase.price} ${currencySymbol}\n–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: ${purchase.date}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${purchase.quantity}`;

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        embed.addFields([{ name: `–ü–æ–∫—É–ø–∫–∞ ${index + 1}`, value: purchaseInfo }]);
      });

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞:', error.message);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞.');
    }
  },
};
