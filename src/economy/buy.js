const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { money, shop, economy_settings, purchase } = require('../../mongoDB');
const { embedcolor } = require('../../config.json');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('buy')
    .setDescription('–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞')
    .addStringOption(option =>
      option.setName('item')
        .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
        .setRequired(true)
    )
    .addIntegerOption(option =>
      option.setName('quantity')
        .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏')
        .setRequired(true)
    ),
  async execute(interaction) {
    const guildId = interaction.guildId;
    const userId = interaction.user.id;

    try {
      // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const userBalanceData = await money.findOne({ guildID: guildId, userID: userId });

      // –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —É –Ω–µ–≥–æ –Ω–µ—Ç –±–∞–ª–∞–Ω—Å–∞
      if (!userBalanceData) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.');
      }

      // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –º–∞–≥–∞–∑–∏–Ω–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const serverShopData = await shop.findOne({ guildID: guildId });
      const currencySymbolData = await economy_settings.findOne({ guildID: guildId });
      const currencySymbol = currencySymbolData ? currencySymbolData.currencySymbol || 'üíµ' : 'üíµ';

      if (!serverShopData || !serverShopData.items) {
        return interaction.reply('–ú–∞–≥–∞–∑–∏–Ω –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      }

      const itemToBuy = interaction.options.getString('item');
      const selectedItem = serverShopData.items.find(item => item.title === itemToBuy);

      if (!selectedItem) {
        return interaction.reply('–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç.');
      }

      const userBalance = parseInt(userBalanceData.handBalance);
      const quantityToBuy = interaction.options.getInteger('quantity');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–Ω–µ–≥
      if (userBalance < selectedItem.price * quantityToBuy) {
        return interaction.reply('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —ç—Ç–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞.');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
      userBalanceData.handBalance -= selectedItem.price * quantityToBuy;

      // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
      if (selectedItem.quantity && selectedItem.quantity >= quantityToBuy) {
        selectedItem.quantity -= quantityToBuy;
      } else {
        // –ï—Å–ª–∏ —É —Ç–æ–≤–∞—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ–Ω—å—à–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ, —É–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
        serverShopData.items = serverShopData.items.filter(item => item.title !== itemToBuy);
      }

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –ø–æ–∫—É–ø–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      const newPurchase = new purchase({
        userID: userId, // –î–æ–±–∞–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏–ª —Ç–æ–≤–∞—Ä
        guildID: guildId, // –î–æ–±–∞–≤–ª—è–µ–º ID —Å–µ—Ä–≤–µ—Ä–∞
        title: selectedItem.title,
        price: selectedItem.price,
        quantity: quantityToBuy,
        date: new Date().toLocaleDateString('ru-RU'), // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì
      });
      await newPurchase.save();

      const embed = new EmbedBuilder()
        .setColor(embedcolor)
        .setTitle('üõí **–£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞**')
        .setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏: "${selectedItem.title}" –∑–∞ ${selectedItem.price * quantityToBuy} ${currencySymbol}, ${quantityToBuy} —à—Ç. —Ç–æ–≤–∞—Ä–∞.`);

      // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (selectedItem.description) {
        embed.addFields({ name: '–û–ø–∏—Å–∞–Ω–∏–µ', value: selectedItem.description });
      }

      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞:', error.message);
      await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.');
    }
  },
};
